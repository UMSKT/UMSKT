# This file is a part of the UMSKT Project
#
# Copyleft (C) 2019-2023 UMSKT Contributors (et.al.)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# @FileCreated by TheTank20 on 07/08/2025
# @Maintainer Neo

name: C/C++ CI (Windows ARM)

on:
  push:
    branches: [ "*" ]
    paths-ignore: [ '**.md', 'doc/**', '.idea/**']
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
        fail-fast: false
        matrix:
            include:
              - arch: arm32
                arch_compilename: amd64_arm
                vcpkg_arch: arm-windows-static
                cmake_arch: ARM
                sdk_version: '10.0.17763.0'
              - arch: arm64
                arch_compilename: amd64_arm64
                vcpkg_arch: arm64-windows-static
                cmake_arch: ARM64
                sdk_version: '10.0.17763.0'
    steps:
      - name: Setup MSVC for ${{ matrix.arch }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch_compilename }}
          sdk: ${{ matrix.sdk_version }}

      - name: Checkout Source Tree
        uses: actions/checkout@v4

      - name: Cache OpenSSL Binaries
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ github.workspace }}-OpenSSL-MSVC-${{ matrix.arch }}
          key: openssl-1.1.1-${{ matrix.arch }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Checkout and Compile OpenSSL v1.1.1
        shell: pwsh
        run: |
            git clone https://github.com/UMSKT/openssl --branch OpenSSL_1_1_1-stable --depth 1 openssl-src
            cd openssl-src
            
            # Install Perl if needed
            choco install strawberryperl -y
            
            # Configure and build OpenSSL for ARM32
            $env:PATH = "C:\Strawberry\perl\bin;$env:PATH"
            
            # First set up Visual Studio environment
            $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
            $vcvarsall = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"

            $vcTarget = ""
            if ("${{ matrix.arch}}" -eq "arm32") {
              $vcTarget = "VC-WIN32-ARM"
            } else {
              $vcTarget = "VC-WIN64-ARM"
            }
            
            # Configure OpenSSL
            perl Configure $vcTarget no-shared no-asm no-engine --prefix="$env:GITHUB_WORKSPACE/OpenSSL-MSVC-${{ matrix.arch }}"
            
            # Build using MSVC ARM32 tools
            cmd /c "call `"$vcvarsall`" ${{matrix.arch_compilename}} && nmake && nmake install_sw"
            cd ..

      - name: Save OpenSSL Binaries
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ github.workspace }}/OpenSSL-MSVC-${{ matrix.arch }}
          key: openssl-1.1.1-${{ matrix.arch }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Set OpenSSL Environment
        shell: pwsh
        run: |
          echo "OPENSSL_ROOT=$env:GITHUB_WORKSPACE/OpenSSL-MSVC-${{ matrix.arch }}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "OPENSSL_LIBDIR=lib" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Configure UMSKT
        shell: pwsh
        run: |
          cmake -G "Visual Studio 17 2022" `
            -A ${{ matrix.cmake_arch }} `
            -DWINDOWS_ARM=ON `
            -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" `
            -DVCPKG_TARGET_TRIPLET=${{ matrix.vcpkg_arch }} `
            .

      - name: Build UMSKT
        shell: pwsh
        run: |
          cmake --build . --config Release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: UMSKT-WinNT-${{ matrix.arch }}
          path: Release/umskt.exe

  test-arm64:
    needs: build
    if: success()
    runs-on: windows-11-arm
    strategy:
      matrix:
        arch: [arm64]
    steps:
      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: UMSKT-WinNT-${{ matrix.arch }}
          path: .

      - name: Run tests
        shell: pwsh
        run: |
          Write-Host Test 1 - generating key
          .\umskt.exe -b 2C -c 365 -s 069420 -v
          Write-Host Test 2 - generatng confid
          .\umskt.exe -i 253286028742154311079061239762245184619981623171292574 
